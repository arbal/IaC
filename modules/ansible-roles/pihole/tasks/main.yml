- name: Create etc directory
  become: yes
  file:
    path: /etc/pihole/
    state: directory
  tags:
    - pihole

- name: Set settings
  become: yes
  template:
    src: setupVars.conf.j2
    dest: /etc/pihole/setupVars.conf
    mode: 0755
  tags:
    - pihole

- name: Check if PiHole is installed
  stat:
    path: /usr/local/bin/pihole
  register: pihole_stat

- name: Setup Pihole
  become: yes
  shell: "wget -O - https://install.pi-hole.net | bash /dev/stdin --unattended"
  register: setup_result
  when: not pihole_stat.stat.exists
  tags:
    - setup
    - pihole
  
- debug:
    msg: "{{ setup_result }}"
  when: not pihole_stat.stat.exists
  tags:
    - setup
    - pihole

- name: Set webui password
  become: yes
  command: "/usr/local/bin/pihole -a -p {{ webui_password }}"
  register: pihole_set_password
  when: webui_password != ""
  tags:
    - password
    - pihole

- debug:
    msg: "{{ pihole_set_password.stdout }}"
  when: webui_password != ""
  tags:
    - password
    - pihole

- name: Remove all block lists
  shell: "sqlite3 /etc/pihole/gravity.db \"DELETE FROM adlist \""
  ignore_errors: yes

- name: Add extra block lists
  shell: "sqlite3 /etc/pihole/gravity.db \"INSERT INTO adlist (address,enabled) VALUES ('{{ item.url }}', {{ item.enabled | ternary('1', '0') }})\""
  ignore_errors: yes
  with_items: "{{ extra_block_lists }}"
  tags:
    - pihole

- name: Update blacklists
  command: "/usr/local/bin/pihole -g"
  register: pihole_update_blacklists
  tags:
    - pihole

- debug:
    msg: "{{ pihole_update_blacklists.stdout }}"
  tags:
    - pihole

- name: Remove Pihole from /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1'
    state: absent

- name: Restart dns resolver
  become: yes
  command: "/usr/local/bin/pihole restartdns"
  tags:
    - pihole

- name: Restart pihole-FTL
  systemd:
    name: pihole-FTL
    state: restarted
