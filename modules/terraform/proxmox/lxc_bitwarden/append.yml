---
- hosts: all
  gather_facts: no
  pre_tasks:
    - name: Include variables
      vars:
        file: prod.yml
      include_role:
        name: vars
      tags:
        - always
  tasks:
    - name: Add Kernel Modules
      lineinfile:
        dest: /etc/modules
        line: "{{ item }}"
      with_items:
        - aufs      # Required by docker inside LXC
        - overlay   # Required by docker inside LXC
      tags: 
        - modules
    
    - name: Enable modules
      command: "modprobe {{ item }}"
      with_items:
        - aufs
        - overlay

    - name: Stop container
      shell: "pct stop {{ container_id }} || true"

    - name: Add extra container features
      command: "pct set {{ container_id }} --features fuse=1,nesting=1"

    - name: Create mount directory
      file:
        path: "{{ lxc.storage_path }}/{{ container_name }}/{{ item.split(':')[1] }}"
        owner: 100000
        group: 100000
        state: directory
      with_items: "{{ lxc[container_name].mounts }}"
      when: 
        - item.split(':')[0] == "storage_path"

    - name: Add mount points
      command: "pct set {{ container_id }} -mp{{ item.0 }} {{ lxc.storage_path }}/{{ container_name }}{{ item.1.split(':')[1] }},mp={{ item.1.split(':')[1] }}"
      with_indexed_items: "{{ lxc[container_name].mounts }}"
      when:
        - item.1.split(':')[0] == "storage_path"

    - name: Add mount points
      command: "pct set {{ container_id }} -mp{{ item.0 }} {{ item.1.split(':')[0] }},mp={{ item.1.split(':')[1] }}"
      with_indexed_items: "{{ lxc[container_name].mounts }}"
      when: item.1.split(':')[0] != "storage_path"
    
    - name: Append additional configuration
      become: yes
      # For some reason `lineinfile` module didn't work
      shell:
        cmd: 'grep -qF "{{ item }}" /etc/pve/lxc/{{ container_id }}.conf  || echo "{{ item }}" | tee --append /etc/pve/lxc/{{ container_id }}.conf'
      with_items:
        - "lxc.apparmor.profile: unconfined"
        - "lxc.cgroup.devices.allow: a"
        - "lxc.cap.drop:"

    - name: Start Container
      command: "pct start {{ container_id }}"